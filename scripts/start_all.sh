#!/bin/bash

# ƒê·∫∑t bi·∫øn ƒë·ªÉ d·ªÖ debug
set -e  # Tho√°t script n·∫øu c√≥ l·ªói
START_TIME=$(date +%s)

echo "===== B·∫ÆT ƒê·∫¶U KH·ªûI ƒê·ªòNG H·ªÜ TH·ªêNG THU TH·∫¨P D·ªÆ LI·ªÜU B·∫§T ƒê·ªòNG S·∫¢N ====="
echo "Th·ªùi gian b·∫Øt ƒë·∫ßu: $(date)"

# Danh s√°ch c√°c th∆∞ m·ª•c c·∫ßn thi·∫øt
dirs=(
  "docker/volumes/kafka"
  "docker/volumes/zookeeper"
  "docker/volumes/hdfs/namenode"
  "docker/volumes/hdfs/datanode1"
  "docker/volumes/hdfs/datanode2"
  "docker/volumes/hdfs/datanode3"
  "data_processing/airflow/dags"
  "data_processing/airflow/logs"
  "data_processing/airflow/plugins"
  "data_processing/notebooks"
  "data_processing/spark/jobs"
)

# Ki·ªÉm tra xem c√≥ thi·∫øu th∆∞ m·ª•c n√†o kh√¥ng
need_init=false
for dir in "${dirs[@]}"; do
  if [ ! -d "$dir" ]; then
    echo "‚ö†Ô∏è  Thi·∫øu th∆∞ m·ª•c: $dir"
    need_init=true
    break
  fi
done

# N·∫øu thi·∫øu, g·ªçi script init
if $need_init; then
  echo "üöß ƒêang ch·∫°y init_volumes.sh ƒë·ªÉ t·∫°o th∆∞ m·ª•c..."
  ./scripts/init_volumes.sh
else
  echo "‚úÖ T·∫•t c·∫£ th∆∞ m·ª•c ƒë√£ t·ªìn t·∫°i. B·ªè qua b∆∞·ªõc init."
fi


# Ki·ªÉm tra file hadoop.env
HADOOP_ENV_FILE="docker/hadoop.env"

if [ ! -f "$HADOOP_ENV_FILE" ]; then
    echo "C·∫¢NH B√ÅO: Kh√¥ng t√¨m th·∫•y file hadoop.env t·∫°i $HADOOP_ENV_FILE."
    exit 1
fi

# Di chuy·ªÉn ƒë·∫øn th∆∞ m·ª•c docker
cd docker

# Kh·ªüi ch·∫°y h·ªá th·ªëng t·ª´ng ph·∫ßn
echo "===== KH·ªûI ƒê·ªòNG H·ªÜ TH·ªêNG ====="

# 1. Kh·ªüi ƒë·ªông HDFS
echo "===== KH·ªûI ƒê·ªòNG HDFS ====="
docker compose -f yml/hdfs.yml up -d
echo "ƒê·ª£i HDFS kh·ªüi ƒë·ªông ho√†n t·∫•t..."
sleep 5

# Ki·ªÉm tra HDFS ƒë√£ kh·ªüi ƒë·ªông th√†nh c√¥ng
if docker ps | grep namenode > /dev/null; then
    echo "‚úÖ HDFS namenode ƒë√£ kh·ªüi ƒë·ªông th√†nh c√¥ng."
else
    echo "‚ùå HDFS namenode kh·ªüi ƒë·ªông th·∫•t b·∫°i. Ki·ªÉm tra logs: docker logs namenode"
    exit 1
fi

# 2. Kh·ªüi ƒë·ªông Kafka v√† ZooKeeper
echo "===== KH·ªûI ƒê·ªòNG KAFKA ====="
docker compose -f yml/kafka.yml up -d
echo "ƒê·ª£i Kafka kh·ªüi ƒë·ªông ho√†n t·∫•t..."
sleep 5

# Ki·ªÉm tra Kafka ƒë√£ kh·ªüi ƒë·ªông th√†nh c√¥ng
if docker ps | grep kafka > /dev/null; then
    echo "‚úÖ Kafka ƒë√£ kh·ªüi ƒë·ªông th√†nh c√¥ng."
else
    echo "‚ùå Kafka kh·ªüi ƒë·ªông th·∫•t b·∫°i. Ki·ªÉm tra logs: docker logs kafka"
    exit 1
fi

# 3. Kh·ªüi ƒë·ªông Airflow
echo "===== KH·ªûI ƒê·ªòNG AIRFLOW ====="
# Thi·∫øt l·∫≠p Airflow
docker compose -f yml/airflow.yml up -d
sleep 5
# Ki·ªÉm tra Airflow ƒë√£ kh·ªüi ƒë·ªông th√†nh c√¥ng
if docker ps | grep airflow-web > /dev/null; then
    echo "‚úÖ Airflow webserver ƒë√£ kh·ªüi ƒë·ªông th√†nh c√¥ng."
else
    echo "‚ùå Airflow webserver kh·ªüi ƒë·ªông th·∫•t b·∫°i. Ki·ªÉm tra logs: docker logs airflow-web"
fi

# 4. Kh·ªüi ƒë·ªông Spark
echo "===== KH·ªûI ƒê·ªòNG SPARK ====="
docker compose -f yml/spark.yml up -d
echo "ƒê·ª£i Spark kh·ªüi ƒë·ªông ho√†n t·∫•t..."
sleep 5

# Ki·ªÉm tra Spark ƒë√£ kh·ªüi ƒë·ªông th√†nh c√¥ng
if docker ps | grep spark-master > /dev/null; then
    echo "‚úÖ Spark master ƒë√£ kh·ªüi ƒë·ªông th√†nh c√¥ng."
else
    echo "‚ùå Spark master kh·ªüi ƒë·ªông th·∫•t b·∫°i. Ki·ªÉm tra logs: docker logs spark-master"
fi

# 5. Kh·ªüi ƒë·ªông c√°c crawler service
echo "===== KH·ªûI ƒê·ªòNG CRAWLER SERVICES ====="
docker compose -f yml/crawler.yml up -d
echo "ƒê·ª£i c√°c crawler service kh·ªüi ƒë·ªông ho√†n t·∫•t..."
sleep 5

# Ki·ªÉm tra c√°c d·ªãch v·ª• ch√≠nh ƒë√£ ho·∫°t ƒë·ªông ch∆∞a
echo "===== KI·ªÇM TRA TR·∫†NG TH√ÅI D·ªäCH V·ª§ ====="

# T√≠nh th·ªùi gian kh·ªüi ƒë·ªông
END_TIME=$(date +%s)
RUNTIME=$((END_TIME-START_TIME))
MINUTES=$((RUNTIME / 60))
SECONDS=$((RUNTIME % 60))

echo "===== HO√ÄN TH√ÄNH KH·ªûI ƒê·ªòNG ====="
echo "T·∫•t c·∫£ c√°c d·ªãch v·ª• ƒë√£ ƒë∆∞·ª£c kh·ªüi ƒë·ªông trong $MINUTES ph√∫t $SECONDS gi√¢y!"
echo
echo "TRUY C·∫¨P C√ÅC GIAO DI·ªÜN:"
echo "- HDFS UI: http://localhost:9870"
echo "- Airflow UI: http://localhost:8080 (user/pass: admin/admin)"
echo "- Spark UI: http://localhost:8181"
echo "- Jupyter: http://localhost:8888"
echo
echo "KI·ªÇM TRA TR·∫†NG TH√ÅI:"
echo "- Xem danh s√°ch container: docker ps"
echo "- Xem logs HDFS: docker logs namenode"
echo "- Xem logs Kafka: docker logs kafka"
echo "- Xem logs Airflow: docker logs airflow-web"
echo "- Xem logs crawler: docker logs list-crawler"
echo
echo "D·ª™NG H·ªÜ TH·ªêNG:"
echo "- S·ª≠ d·ª•ng: ./scripts/stop_all.sh"
